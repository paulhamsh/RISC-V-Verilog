// [start:0]
//           10000000000000000000_00101_01101_11   // lui   x5, 524288
//         000000000100_00101_000_00101_00100_11   // addi  x5, x5, 4
//         000000000111_00000_000_00110_00100_11   // addi  x6, x0, 7
// [loop:12]
//        0000000_00110_00101_010_00000_01000_11   // sw	  x6, 0(x5)
//           00000000000000000001_00001_01101_11   // lui	  x1, 1
//         011111111111_00000_000_00001_00100_11   // addi  x1, x0, 2047
//         000000000010_00000_000_00001_00100_11   // addi  x1, x0, 2
// [delay:20]
//         111111111111_00001_000_00001_00100_11   // addi  x1, x1, -1
//      1_111111_00000_00001_001_1110_1_11000_11   // bne   x1, x0, delay
//         000000000001_00110_000_00110_00100_11   // addi  x6, x6, 1
//        1_1111110110_1_11111111_00000_11011_11   // jal   x0, loop


// [start:0]
000000000000_00000_010_00011_00000_11  // lw	x3, 0(x0)     x3 = mem(0) = 1000_0000_0000_0000__0000_0000_0000_0001
000000000100_00000_010_00100_00000_11  // lw	x4, 4(x0)     x4 = mem(4) = 1000_0000_0000_0000__0000_0000_0000_0010
000000001000_00000_010_00101_00000_11  // lw	x5, 8(x0)     x5 = mem(8) = 1000_0000_0000_0000__0000_0000_0000_0100
000000000000_00011_010_00001_00000_11  // lw	x1, 0(x3)     x1 = io(1)
000000000000_00100_010_00010_00000_11  // lw	x2, 0(x4)     x2 = io(2)
0000000_00010_00001_110_00110_01100_11 // or    x6, x1, x2    x6 = x1 | x2
//001111001111_00000_000_00110_00100_11  // addi  x6, x0, ????
0000000_00110_00101_010_00000_01000_11 // sw	x6, 0(x5)	  io(4) = x6
1_1111110010_1_11111111_00000_11011_11 // jal	x0, start     loop