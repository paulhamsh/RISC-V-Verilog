       // this can be run through in testbench and will eventually loop around 09, 0a and ob
       // 00000000_00000000_0000_010_000_000000  // 00 load r0 <- mem r2   0 = 1
       // 00000000_00000000_0000_010_001_000100  // 01 load r1 <- mem r2   4 = 2
       // 00000000_00000000_1100_000_001_000010  // 02 bne 2  skip two instruction     - this should branch, to 05
       // 00000000_00000000_0010_000_001_011_000 // 03 add r3 <- r0   r1 = 3            - not executed
       // 00000000_00000000_1101_000000000000    // 04 j jump to the beginning address  - not executed
       // 00000000_00000000_0000_010_001_000000  // 05 load r1 <- mem r2   0 = 1
       // 00000000_00000000_1011_000_001_000011  // 06 beq 3  skip three instruction   - this should branch, to 09
       // 00000000_00000000_0010_000_001_011_000 // 07 add r3 <- r0   r1 = 2
       // 00000000_00000000_1101_000000000000    // 08 j jump to the beginning address
       // 00000000_00000000_1101_000000001010    // 09 j jump to 0a                     - this should jump to 0a
       // 00000000_00000000_0000_010_001_000000  // 0a load r1 <- mem r2   0 = 1
       // 00000000_00000000_1011_000_001_111101  // 0b beq -3  skip three instructions backwards - should jump back to 09
       // 00000000_00000000_1101_000000000000    // 0c j jump to the beginning address
       // 00000000_00000000_1101_000000000000    // 0d j jump to the beginning address
       // 00000000_00000000_1101_000000000000    // 0e j jump to the beginning address
// [start:0]
0       000000_000_000_00_010_00000_000_0000 
4       000100_000_000_00_010_00000_001_0000 
8       000000_000_001_00_000_00000_000_000_1100 
12      000000_000_001_000_000_00000_011_000_0010 
16      000000000000_00_000_00000_000_000_1101 
20      000000_000_000_00_010_00000_001_0000 
24      000000_000_001_00_000_00000_000_000_1011 
28      000000_000_001_000_000_00000_011_000_0010 
32      000000000000_00_000_00000_000_000_1101 
36      000000001010_00_000_00000_000_000_1101 
// [next:40]
40      000000_000_000_00_010_00000_001_0000 
44      111111_000_001_00_000_00000_000_000_1011 
48      000000000000_00_000_00000_000_000_1101 
52      000000000000_00_000_00000_000_000_1101 
56      000000000000_00_000_00000_000_000_1101 
