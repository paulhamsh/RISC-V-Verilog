       // this can be run through in testbench and will eventually loop around 09, 0a and ob
       //  start:0
       //        000000_0_00000_00010_000_00100_0000000 // 00 load x4 <- mem x2   0 = 1
       //        000100_0_00000_00010_000_00001_0000000 // 01 load x1 <- mem x2   4 = 2
       //        000010_0_00001_00100_000_00000_0001100 // 02 bne 2  skip two instruction     - this should branch, to 05
       //        000000_0_00001_00100_000_00011_0000010 // 03 add x3 <- x4   x1 = 3            - not executed
       //          000000000000_00000_000_00000_0001101 // 04 j jump to the beginning address  - not executed
       //        000000_0_00000_00010_000_00001_0000000 // 05 load x1 <- mem x2   0 = 1
       //        000011_0_00001_00100_000_00000_0001011 // 06 beq 3  skip three instruction   - this should branch, to 09
       //        000000_0_00001_00100_000_00011_0000010 // 07 add x3 <- x4   x1 = 2
       //          000000000000_00000_000_00000_0001101 // 08 j jump to the beginning address
       //          000000001010_00000_000_00000_0001101 // 09 j jump to 0a
       //  next:40
       //        000000_0_00000_00010_000_00001_0000000 // 0a load x1 <- mem x2   0 = 1
       //        111101_0_00001_00100_000_00000_0001011 // 0b beq -3  skip three instructions backwards - should jump back to 09
       //          000000000000_00000_000_00000_0001101 // 0c j jump to the beginning address
       //          000000000000_00000_000_00000_0001101 // 0c j jump to the beginning address
       //          000000000000_00000_000_00000_0001101 // 0c j jump to the beginning address
// [start:0]
0       000000_0_00000_00010_000_00100_0000011 
4       000100_0_00000_00010_000_00001_0000011 
8       000010_0_00001_00100_000_00000_0110011 
12      000000_0_00001_00100_000_00011_0001011 
16        000000000000_00000_000_00000_0110111 
20      000000_0_00000_00010_000_00001_0000011 
24      000011_0_00001_00100_000_00000_0101111 
28      000000_0_00001_00100_000_00011_0001011 
32        000000000000_00000_000_00000_0110111 
36        000000001010_00000_000_00000_0110111 
// [next:40]
40      000000_0_00000_00010_000_00001_0000011 
44      111101_0_00001_00100_000_00000_0101111 
48        000000000000_00000_000_00000_0110111 
52        000000000000_00000_000_00000_0110111 
56        000000000000_00000_000_00000_0110111 
