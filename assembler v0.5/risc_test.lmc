// [start:0]
0          000000000000_00010_000_00001_00000_11 
4          000000000000_00010_001_00001_00000_11 
8          000000000000_00010_010_00001_00000_11 
12         000000000000_00010_100_00001_00000_11 
16         000000000000_00010_101_00001_00000_11 
20        0000000_00001_00010_000_00000_01000_11 
24        0000000_00001_00010_001_00000_01000_11 
28        0000000_00001_00010_010_00000_01000_11 
32        0111111_00001_00010_000_11111_01000_11 
36        1111111_00001_00010_000_11111_01000_11 
40        1000000_00001_00010_000_00000_01000_11 
44        0000000_00011_00010_000_00001_01100_11 
48        0100000_00011_00010_000_00001_01100_11 
52        0000000_00011_00010_001_00001_01100_11 
56        0000000_00011_00010_010_00001_01100_11 
60        0000000_00011_00010_011_00001_01100_11 
64        0000000_00011_00010_100_00001_01100_11 
68        0000000_00011_00010_101_00001_01100_11 
72        0100000_00011_00010_101_00001_01100_11 
76        0000000_00011_00010_110_00001_01100_11 
80        0000000_00011_00010_111_00001_01100_11 
84         000000000000_00010_000_00001_00100_11 
88         011111111111_00010_010_00001_00100_11 
92         011111111111_00010_011_00001_00100_11 
96         011111111111_00010_100_00001_00100_11 
100        111111111111_00010_110_00001_00100_11 
104        111111111111_00010_111_00001_00100_11 
108       0000000_00001_00010_001_00001_00100_11 
112       0000000_11111_00010_101_00001_00100_11 
116       0100000_11111_00010_101_00001_00100_11 
       // branches must be even  and ought to be a multiple of 4 really
       // so use even numbers in assembly
120     0_000000_00010_00001_000_0001_0_11000_11 
124     0_111111_00010_00001_001_1111_1_11000_11 
128     0_111111_00010_00001_100_1111_0_11000_11 
132     0_111111_00010_00001_101_1111_0_11000_11 
136     1_111111_00010_00001_110_1111_1_11000_11 
140     1_000000_00010_00001_111_0000_1_11000_11 
       // jal must be even  and ought to be a multiple of 4 really
       // so use even numbers in assembly
144       0_1111111111_0_00000000_00001_11011_11 
148       0_1111111111_1_01111111_00001_11011_11 
152       1_0000000000_0_10000000_00001_11011_11 
156       1_1111111111_1_11111111_00001_11011_11 
       // jalr can be odd, but when placed into the pc will have the final bit dropped regardless
160        111111111111_00010_000_00001_11001_11 
164        000000000001_00010_000_00001_11001_11 
168        011111111111_00010_000_00001_11001_11 
172          01111111111111111111_00001_00101_11 
176          11111111111111111111_00001_00101_11 
180          01111111111111111111_00001_01101_11 
184          11111111111111111111_00001_01101_11 
// [next:188]
188       0100000_00000_00000_000_00000_01100_11 
192        000000000000_00000_000_00011_0000000 
196        000000000100_00000_000_00100_0000000 
200        000000001000_00000_000_00101_0000000 
204        000000000000_00011_000_00001_0000000 
208        000000000000_00100_000_00010_0000000 
212       0000000_00010_00001_110_00110_01100_11 
216       0000000_00110_00101_000_00000_0000100 
220       1_1110010010_1_11111111_00000_0110100 
